image: node:12.13.0-alpine

services:
  - mysql:latest
  - name: docker:dind
    alias: docker


variables:
  MYSQL_ROOT_PASSWORD: secret
  MYSQL_DATABASE: gruppegen
  MYSQL_PORT: 3306

stages:
  - connect
  - test
  - build
  - lint
  - ktbuild
  - ktlint
  - deploy_coverage
  - deploy_pages
  - deploy

connect:
  stage: connect
  image: mysql
  script:
    - echo "SELECT 'OK';" | mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=mysql "$MYSQL_DATABASE"

test:
  image: java:8-jdk
  stage: test
  script:
    - sleep 20
    - cd backend
    - ./gradlew test

build:
  stage: build
  script:
    - cd frontend
    - yarn install
    - yarn run build

lint:
  stage: lint
  script:
    - cd frontend
    - yarn add eslint
    - node_modules/eslint/bin/eslint.js

ktlint:
  image: openjdk:14-ea-8-jdk-alpine3.10
  stage: ktlint
  script:
    - cd backend
    - ./gradlew ktlintCheck

ktbuild:
  image: openjdk:14-ea-8-jdk-alpine3.10
  stage: ktbuild
  script:
    - cd backend
    - ./gradlew build

deploy:
  stage: deploy
  script:
    - yarn global add firebase-tools
    - cd frontend
    - echo "REACT_APP_API_URL=$REACT_APP_API_URL\nREACT_APP_SOCKET_URL=$REACT_APP_SOCKET_URL" > .env
    - yarn install
    - yarn run build
    - firebase deploy --only hosting --token $FIREBASE_TOKEN
  only:
    - dev

deploy_coverage:
  image: openjdk:14-ea-8-jdk-alpine3.10
  stage: deploy_coverage
  script:
    - cd backend
    - ./gradlew clean build jacocoTestReport
    - cd ..
    - mv backend/build/reports/jacoco/test/html public
  artifacts:
    paths:
      - public
  only:
    - dev

deploy_pages:
  image: openjdk:14-ea-8-jdk-alpine3.10
  stage: deploy_pages
  script:
    - cd backend
    - ./gradlew dokkaHtml
    - cd ..
    - mv backend/build/dokka/html public
  artifacts:
    paths:
      - public
  only:
    - dev
  
