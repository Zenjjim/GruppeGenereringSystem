image: node:12.13.0-alpine

services:
  - mysql:latest
  
  
variables:
    MYSQL_ROOT_PASSWORD: secret
    MYSQL_DATABASE: gruppegen
    MYSQL_PORT: 3306
    
stages:
  - connect
  - test
  - build
  - lint
  - ktbuild
  - ktlint
  - deploy_jsdoc
  - deploy_ktdoc
  - deploy_coverage
  - deploy_pages
  - deploy

connect:
  stage: connect
  image: mysql
  script:
    - echo "SELECT 'OK';" | mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=mysql "$MYSQL_DATABASE"

test:
  image: java:8-jdk
  stage: test
  script:
    - sleep 20
    - cd backend
    - ./gradlew test

build:
  stage: build
  script:
    - cd frontend
    - yarn install
    - yarn run build

lint:
  stage: lint
  script:
    - cd frontend
    - yarn add eslint
    - node_modules/eslint/bin/eslint.js

deploy_jsdoc:
  stage: deploy_jsdoc
  script:
      - cd frontend
      - yarn global add jsdoc
      - yarn install
      - yarn docs
      - cd ..
      - mkdir .public
      - mkdir .public/jsdoc
      - mv frontend/docs .public/jsdoc
      - mv .public/jsdoc public
  artifacts:
    paths:
      - public
      
deploy:
  stage: deploy
  script:
    - yarn global add firebase-tools
    - cd frontend
    - echo "REACT_APP_API_URL=$REACT_APP_API_URL\nREACT_APP_SOCKET_URL=$REACT_APP_SOCKET_URL" > .env
    - yarn install
    - yarn run build
    - firebase deploy --only hosting --token $FIREBASE_TOKEN
  only:
    - dev

ktlint:
  image: openjdk:14-ea-8-jdk-alpine3.10
  stage: ktlint
  script:
    - cd backend
    - ./gradlew ktlintCheck
    
ktbuild:
  image: openjdk:14-ea-8-jdk-alpine3.10
  stage: ktbuild
  script:
    - cd backend
    - ./gradlew build
    
deploy_coverage:
  image: openjdk:14-ea-8-jdk-alpine3.10
  stage: deploy_coverage
  script:
    - cd backend
    - ./gradlew clean build jacocoTestReport
    - cd ..
    - mkdir .public
    - mkdir .public/coverage
    - mv backend/build/reports/jacoco/test/html .public/coverage
    - mv .public/coverage public
  artifacts:
    paths:
      - public

deploy_ktdoc:
  image: openjdk:14-ea-8-jdk-alpine3.10
  stage: deploy_ktdoc
  script:
      - cd backend
      - ./gradlew dokkaHtml
      - cd ..
      - mkdir .public
      - mkdir .public/dokka
      - mv backend/build/dokka/html .public/dokka
      - mv .public/dokka public
  artifacts:
    paths:
      - public
      
deploy_pages:
  stage: deploy_pages
  script:
      - mkdir .public
      - cd .public
      - echo "<!doctype html><html lang="en"><head><meta charset="utf-8"><title>Gen-g report</title><meta name="description" content="Pages view"><meta name="author" content="Gen-g"></head><body><a href="dokka/html/gruppe7/index.html">Backend code documentation</a><br/><a href="coverage/html/index.html">Backend test coverage</a><br/><a href="docs/index.html">Fro code documentation</a></body></html>" > index.html
      - cd ..
      - mv .public public
  artifacts:
    paths:
      - public

