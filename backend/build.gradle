buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:5.2.0"
        classpath "com.google.cloud.tools:appengine-gradle-plugin:2.1.0"
    }
}

apply plugin: 'kotlin'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'application'
apply plugin: 'war'
apply plugin: 'com.google.cloud.tools.appengine'

appengine.deploy.projectId = 'GCLOUD_CONFIG'
appengine.deploy.version = 'GCLOUD_CONFIG'


group 'com.gruppe7'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-websockets:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-gson:$ktor_version"

    implementation("org.jetbrains.exposed:exposed-core:$ktor_exposed")
    implementation("org.jetbrains.exposed:exposed-jdbc:$ktor_exposed")

    implementation("com.zaxxer:HikariCP:3.4.5")
    implementation("mysql:mysql-connector-java:8.0.21")

    implementation("io.github.cdimascio:java-dotenv:5.2.2")

    providedCompile("com.google.appengine:appengine:1.9.60")

    testImplementation "io.ktor:ktor-server-tests:$ktor_version"

}

shadowJar {
    baseName = 'backend'
    classifier = null
    version = null
}

kotlin.experimental.coroutines = 'enable'

task run(dependsOn: appengineRun)